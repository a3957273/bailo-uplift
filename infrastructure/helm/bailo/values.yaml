# Default values for bailo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Bailo image location
image:
  repository: "image repository location" # user defined
  tag: "latest" # user defined
  pullPolicy: IfNotPresent
imagePullSecrets: []

# non-identifying metadata
podAnnotations: {}

# Instance scaling
# ReplicateCount ignored if autoscaling is enabled
replicaCount: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80 # hpa configuration
  targetMemoryUtilizationPercentage: 80 # hpa configuration


# Pod Security settings
podSecurityContext: {}
  # fsGroup: 2000
securityContext:
  # capabilities:
  #   drop:
  #     - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  # runAsUser: 1002380001

# Networking
# Ingress/route implementation. Also, see appPublicRoute below. 
service:
  type: ClusterIP
  port: 3000

# k8s config
ingress:
  enabled: false
  name: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true
  fqdn: "example.com"
  path: "/"
  pathType: "Prefix"
  service:
    name: "node-port"
    port: 8080

# Used for OpenShift 
route:
  enabled: false

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 400m
    memory: 800Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


# Pod placement
nodeSelector: {}
tolerations: []
affinity: {}

# Mongo Dependencies
mongodb:
  enabled: true
  architecture: standalone
  ssl: false
  sslValidate: false
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false #Rediness probe failed: /bitnami/scripts/readiness-probe.sh: line 9: mongosh: command not found
  auth:
    enabled: true
    rootUser: ""
    rootPassword: ""
    #existingSecret: "bailo-mongodb" # HELM generated Secret name. Uncomment Mongo Secret details from bailo.secret.yaml for dynamic password configuration.
    usernames: [ bailo_user ] # defined user for database connection. required for ConfigMap bailo-config
    passwords: [ ] # required for ConfigMap bailo-config
    databases: [ bailo ] # defined database for Mongo
  service:
    port: 27017
  collectionName: bailo # Collection name in Mongo
  persistence:
    size: 10Gi
  containerSecurityContext:
    enabled: false
  podSecurityContext:
    enabled: false
  image:
    registry: docker.io
    repository: bitnami/mongodb
    tag: 4.4.13-debian-10-r0

# MinIO Dependencies
minio:
  enabled: true
  mode: standalone
  auth:
    rootUser: ""
    rootPassword: ""
    existingSecret: "bailo-minio" # Helm generated Secret
  defaultBuckets: "uploads,registry"
  createBuckets: "false" # attempt to create buckets
  uploadBucket: uploads # required for Bailo
  registryBucket: registry # required for Bailo
  host: "bailo-minio" # service name
  service:
    ports:
      api: 31111 # default 9000
  useSSL: false
  persistence:
    size: 10Gi
  containerSecurityContext:
    enabled: false
  podSecurityContext:
    enabled: false
  image:
    registry: docker.io
    repository: bitnami/minio
    tag: 2022.2.12-debian-10-r0
    debug: true

# Registry Dependencies
registry:
  repository: registry
  tag: 2
  enabled: true
  host: "registry" # service name
  port: 5000 # default 5000
  insecure: "true"
  certDir: "/certs"
  certFile: "yourcert.pem" #use san.cnf to create certs
  keyFile: "yourkey.pem"


# Nginx Dependencies
nginxAuth:
  repository: nginxinc/nginx-unprivileged # runs Nginx as non-root unrivileged user. 
  tag: latest
  host: "bailo-nginx" # service name
  port: 8080
  #certDir: "/certs"
  #certFile: "tls.crt"
  #keyFile: "tls.key"

# Maildev
maildev:
  enabled: true

# Openshift specific configuration   
openshift:
  namespace: openshift-project
  appPublicRoute: 'openshift-route-url'
  dockerPushSecretName: 'registry-push-secret'
  termination: edge

# Instance Settings
config:
  s2i:
    image: seldonio/seldon-core-s2i-python37:1.10.0
  supportEmail: "support@example.com"

  ui:
    banner:
      enabled: "false"
      text: "BAILO"
      colour: '#047a06'

  smtp:
    host: 'mail'
    port: 1025
    secure: false
    rejectUnauthorized: false
    user: 'mailuser'
    pass: 'mailpass'
    from: 'bailo@example.com'

  build:
    environment: openshift # or img

  app:
    protocol: 'https'
    host: 'example.com'
    port: 443

  schema:
    script: "dist/server/scripts/exampleSetAllSchemas.js"

stroom:
  enabled: false
  url: 'http://localhost:8090/stroom/datafeed'
  feed: 'bailo'
  environment: 'Development'
  insecure: true
  interval: 300000

# nginx.deployment registry.deployment
nginxcert:
  cert: "yourcert.pem" #use san.cnf to create certs
  key: "yourkey.pem"

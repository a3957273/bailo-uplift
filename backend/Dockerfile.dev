FROM node:16-alpine as builder
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app

# Install Turbo
RUN npm install --global turbo
COPY . .
RUN turbo prune --scope=@bailo/backend --docker

FROM node:16-alpine as runner
RUN apk add --no-cache libc6-compat img docker shadow ca-certificates
RUN apk update
WORKDIR /app

# We use 'RUN' instead of 'ADD' here due to odd caching issues where 'ADD' would still
# download S2I, then check that it hasn't changed before accepting it was cached.
# 'RUN' instead caches based on text contents.
RUN mkdir /s2i && \
    wget -O s2i.tar.gz https://github.com/openshift/source-to-image/releases/download/v1.3.1/source-to-image-v1.3.1-a5a77147-linux-amd64.tar.gz && \
    tar -xvf s2i.tar.gz -C /s2i && \
    rm -rf s2i.tar.gz && \
    chmod -R o+x /s2i

ARG user_id=1001
RUN if [[ $user_id -eq 1000 ]]; then groupmod -g 1001 node && usermod -u 1001 -g 1001 node ; fi \
  && chmod u+s /usr/bin/newuidmap /usr/bin/newgidmap \
  && adduser -D -u $user_id user \
  && mkdir -p /run/user/$user_id \
  && chown -R user /run/user/$user_id /home/user \
  && chmod -R o+x /s2i \ 
  && addgroup -S certs \
  && addgroup user certs \
  && chgrp certs /etc/ssl/certs \
  && chmod 775 /etc/ssl/certs \
  && echo user:100000:65536 | tee /etc/subuid | tee /etc/subgid 

# Install dependencies early on (as they change less often)
COPY --chown=user .gitignore .gitignore
COPY --chown=user --from=builder /app/out/json/ .
COPY --chown=user --from=builder /app/out/package-lock.json ./package-lock.json
RUN npm ci

# Build the project and its dependencies
COPY --chown=user --from=builder /app/out/full/ .
COPY --chown=user turbo.json turbo.json

WORKDIR /app/backend

USER user
ENV USER user
ENV HOME /home/user
ENV XDG_RUNTIME_DIR=/run/user/$user_id

EXPOSE 3001
CMD [ "npm", "run", "dev" ]